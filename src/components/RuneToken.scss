@use "sass:color";
@use "sass:math";

@tailwind base;
@tailwind components;
@tailwind utilities;

$rune-size: 6em;
$rune-border-width: 0.25em;

@mixin vertical-hexagon {
  clip-path: polygon(
    #{math.sin(0) * 50 + 50%} #{math.cos(0) * 50 + 50%},
    #{math.sin(60deg) * 50 + 50%} #{math.cos(60deg) * 50 + 50%},
    #{math.sin(120deg) * 50 + 50%} #{math.cos(120deg) * 50 + 50%},
    #{math.sin(180deg) * 50 + 50%} #{math.cos(180deg) * 50 + 50%},
    #{math.sin(240deg) * 50 + 50%} #{math.cos(240deg) * 50 + 50%},
    #{math.sin(300deg) * 50 + 50%} #{math.cos(300deg) * 50 + 50%}
  );
}

.rune-token {

  $rune-spacing: $rune-size - math.sin(60deg) * $rune-size;

  @apply text-task-base-text;

  /* Our tokens are a vertical hexagon shape. */
  border: none;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  position: relative;
  height: $rune-size;
  width: $rune-size;
  margin: math.div(-$rune-spacing, 2) 0;

  // Pseudo-elements for the hexagon shape.
  &::before,
  &::after {
    @include vertical-hexagon();
    content: "";
    display: block;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
  }

  &::before {
    // Represents the border colour.
    @apply bg-task-base-border;
    z-index: 0;
  }

  &::after {
    // Represents the background colour.
    @apply bg-task-base;
    top: $rune-border-width;
    bottom: $rune-border-width;
    left: $rune-border-width;
    right: $rune-border-width;
    z-index: 1;
  }

  &:focus,
  &:hover {
    filter: brightness(110%);
  }

  &.picked {
    @apply text-task-picked-text;
    &::before {
      @apply bg-task-picked-border;
    }
    &::after {
      @apply bg-task-picked;
    }
  }

  &.complete {
    @apply text-task-completed-text;
    &::before {
      @apply bg-task-completed-border;
    }
    &::after {
      @apply bg-task-completed;
    }
  }
}

// This takes care of positioning the bottom row of runes to match the grid.
.offset-last-row .rune-token:last-of-type {
  margin-right: $rune-size;
}
